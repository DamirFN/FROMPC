# локальная,
def local():
   x = 5  # локальная переменная
   print(x)

x = 10
local()
print(x)

# глобальная,
def local():
  print(x)  # так как x нет в локальной области видимости, мы берем её из глобальной области

x = 10
local()
print(x)

# нелокальная (добавлена в Python 3). Переменные объявление между функциями дают им название замыканий функций
def get_mul_func(m):    # 3 действие входим в функцию.
    nonlocal_m = m   #переменная объявлениая не снаружи функции и не внутри второй, между функциями - называется
# не локальная облать видимости. 4 действие присваиваем нелокальной переменной(nonlocal_m) значение m(2)

    def local_mul(n):    # 5 действие запускаем под функцию loucal_mul. 8 действие обращаемся к подфункции loucal_mul с
# заданным значение 5
        return n * nonlocal_m    # 9действие делаем вычисление

    return local_mul    # 6 возвращаем функцию loucal_mul


two_mul = get_mul_func(2)  # возвращаем функцию, которая будет умножать числа на 2(m) 1 действие
two_mul(5)  # 5(n) * 2(m)    # 2 действие запускаем функцию get_mul_func(m). 7 действие обращаемся к функции
# two_mul(5). 10 действие выдаем результат функции get_mul_func(m)


